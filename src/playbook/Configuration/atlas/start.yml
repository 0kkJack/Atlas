---
title: Initial Configuration
description: Copies Atlas folders/files, installs dependencies and performs the preliminary configuration
privilege: TrustedInstaller
actions:
    # AME Wizard Live Log for development playbooks
    # Do not change the line position of this, otherwise things will break when using local-build
  # - !run: {exe: 'cmd.exe', args: '/c start "AME Wizard Live Log" PowerShell -NoP -C "gc -Wait Logs\TIOutput.txt -EA SilentlyContinue | Write-Output; pause"', baseDir: true, wait: false}

  - !writeStatus: {status: 'Setting up'}
    # Prevent annoying notifications during deployment
  - !registryValue: {path: 'HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Notifications\Settings\Windows.SystemToast.SecurityAndMaintenance', value: 'Enabled', type: REG_DWORD, data: '0'}
    # Prevent computer from going to sleep during deployment
  - !run: {exe: 'powercfg.exe', args: '/setacvalueindex scheme_current sub_sleep standbyidle 0'}
  - !run: {exe: 'powercfg.exe', args: '/setdcvalueindex scheme_current sub_sleep standbyidle 0'}

  - !writeStatus: {status: 'Copying files'}
  - !cmd:
    command: 'robocopy "AtlasModules" "%windir%\AtlasModules" /E /PURGE /IM /IT /NP > nul'
    weight: 10
    wait: true
    exeDir: true
  - !cmd:
    command: 'robocopy "AtlasDesktop" "%windir%\AtlasDesktop" /E /PURGE /IM /IT /NP > nul'
    weight: 10
    wait: true
    exeDir: true

  - !writeStatus: {status: 'Setting the environment'}
  - !powerShell:
    wait: true
    command: >-
      $modulesPath = """$([Environment]::GetFolderPath('Windows'))\AtlasModules""";

      function AddToVar($env, $value) {
            $a = [IO.Path]::PathSeparator;
            $b = [System.EnvironmentVariableTarget]::Machine;
            $c = [Environment]::GetEnvironmentVariables($b);

            [Environment]::SetEnvironmentVariable($env,
            ("""$($c.'Path');$value""" -replace ';',"""$a"""),
            $b);
      };

      AddToVar 'Path' """$modulesPath;$modulesPath\Apps;$modulesPath\Other;$modulesPath\Tools;$modulesPath\Scripts""";
      AddToVar 'PSModulePath' """$modulesPath\Scripts\Modules""";

    # Doesn't refresh the environment variables of TrustedUninstaller
    # An alternative should be found, for now, exact paths are used
  # - !writeStatus: {status: 'Refreshing variables'}
  # - !run: {exeDir: true, exe: 'REFRESHENV.cmd'}

  - !writeStatus: {status: 'Enabling DirectPlay'}
  - !run: {exe: 'DISM.exe', args: '/Online /Enable-Feature /FeatureName:"DirectPlay" /NoRestart /All', weight: 30}
  - !writeStatus: {status: 'Disabling Internet Explorer', builds: [ '!>=22000' ]}
  - !run: {exe: 'DISM.exe', args: '/Online /Disable-Feature /FeatureName:"Internet-Explorer-Optional-amd64" /NoRestart', weight: 30, builds: [ '!>=22000' ]}
  - !writeStatus: {status: 'Disabling Printing', option: 'disable-printing'}
  - !run: {exe: 'DISM.exe', args: '/Online /Disable-Feature /FeatureName:"Printing-Foundation-Features" /NoRestart', weight: 30, option: 'disable-printing'}
  - !run: {exe: 'DISM.exe', args: '/Online /Disable-Feature /FeatureName:"Printing-Foundation-InternetPrinting-Client" /NoRestart', weight: 30, option: 'disable-printing'}
  - !run: {exe: 'DISM.exe', args: '/Online /Disable-Feature /FeatureName:"Printing-XPSServices-Features" /NoRestart', weight: 30, option: 'disable-printing'}
  - !run: {exe: 'DISM.exe', args: '/Online /Disable-Feature /FeatureName:"Printing-PrintToPDFServices-Features" /NoRestart', weight: 30, option: 'disable-printing'}

  ################ NO LOCAL BUILD ################

  - !writeStatus: {status: 'Installing software'}

    # Initial software (7-Zip & Visual C++ runtimes)
  - !powerShell:
    command: '.\SOFTWARE.ps1'
    exeDir: true
    wait: true
    weight: 150
    runas: currentUserElevated

    # Browsers
  - !writeStatus: {status: 'Installing Brave', option: 'browser-brave'}
  - !powerShell:
    command: '.\SOFTWARE.ps1 -Brave'
    exeDir: true
    wait: true
    weight: 120
    option: 'browser-brave'
    runas: currentUserElevated
  - !writeStatus: {status: 'Installing Firefox', option: 'browser-firefox'}
  - !powerShell:
    command: '.\SOFTWARE.ps1 -Firefox'
    exeDir: true
    wait: true
    weight: 120
    option: 'browser-firefox'
    runas: currentUserElevated
  - !writeStatus: {status: 'Installing LibreWolf', option: 'browser-librewolf'}
  - !powerShell:
    command: '.\LIBREWOLF.ps1'
    exeDir: true
    wait: true
    weight: 120
    option: 'browser-librewolf'
    runas: currentUserElevated
  - !writeStatus: {status: 'Installing Google Chrome', option: 'browser-chrome'}
  - !powerShell:
    command: '.\SOFTWARE.ps1 -Chrome'
    exeDir: true
    wait: true
    weight: 120
    option: 'browser-chrome'
    runas: currentUserElevated

  ################ END NO LOCAL BUILD ################
